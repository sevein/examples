swagger: "2.0"
info:
    title: Chatter service describing the streaming features of goa v2.
    version: ""
host: localhost:80
consumes:
    - application/json
    - application/xml
    - application/gob
produces:
    - application/json
    - application/xml
    - application/gob
paths:
    /echoer:
        get:
            tags:
                - chatter
            summary: echoer chatter
            description: |-
                Echoes the message sent by the client.

                **Required security scopes for jwt**:
                  * `stream:write`
            operationId: chatter#echoer
            parameters:
                - name: Authorization
                  in: header
                  description: JWT used for authentication
                  required: true
                  type: string
            responses:
                "101":
                    description: Switching Protocols response.
                    schema:
                        type: string
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "403":
                    description: Forbidden response.
                    schema:
                        type: string
            schemes:
                - ws
            security:
                - jwt_header_Authorization: []
    /history:
        get:
            tags:
                - chatter
            summary: history chatter
            description: |-
                Returns the chat messages sent to the server.

                **Required security scopes for jwt**:
                  * `stream:read`
            operationId: chatter#history
            parameters:
                - name: view
                  in: query
                  description: View to use to render the result
                  required: false
                  type: string
                - name: Authorization
                  in: header
                  description: JWT used for authentication
                  required: true
                  type: string
            responses:
                "101":
                    description: Switching Protocols response.
                    schema:
                        $ref: '#/definitions/ChatterHistoryResponseBody'
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "403":
                    description: Forbidden response.
                    schema:
                        type: string
            schemes:
                - ws
            security:
                - jwt_header_Authorization: []
    /listener:
        get:
            tags:
                - chatter
            summary: listener chatter
            description: |-
                Listens to the messages sent by the client.

                **Required security scopes for jwt**:
                  * `stream:write`
            operationId: chatter#listener
            parameters:
                - name: Authorization
                  in: header
                  description: JWT used for authentication
                  required: true
                  type: string
            responses:
                "101":
                    description: Switching Protocols response.
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "403":
                    description: Forbidden response.
                    schema:
                        type: string
            schemes:
                - ws
            security:
                - jwt_header_Authorization: []
    /login:
        post:
            tags:
                - chatter
            summary: login chatter
            description: Creates a valid JWT token for auth to chat.
            operationId: chatter#login
            parameters:
                - name: Authorization
                  in: header
                  description: Basic Auth security using Basic scheme (https://tools.ietf.org/html/rfc7617)
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        type: string
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
            schemes:
                - http
            security:
                - basic_header_Authorization: []
    /subscribe:
        get:
            tags:
                - chatter
            summary: subscribe chatter
            description: |-
                Subscribe to events sent when new chat messages are added.

                **Required security scopes for jwt**:
                  * `stream:write`
            operationId: chatter#subscribe
            parameters:
                - name: Authorization
                  in: header
                  description: JWT used for authentication
                  required: true
                  type: string
            responses:
                "101":
                    description: Switching Protocols response.
                    schema:
                        $ref: '#/definitions/ChatterSubscribeResponseBody'
                        required:
                            - message
                            - action
                            - added_at
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "403":
                    description: Forbidden response.
                    schema:
                        type: string
            schemes:
                - ws
            security:
                - jwt_header_Authorization: []
    /summary:
        get:
            tags:
                - chatter
            summary: summary chatter
            description: |-
                Summarizes the chat messages sent by the client.

                **Required security scopes for jwt**:
                  * `stream:write`
            operationId: chatter#summary
            parameters:
                - name: Authorization
                  in: header
                  description: JWT used for authentication
                  required: true
                  type: string
            responses:
                "101":
                    description: Switching Protocols response.
                    schema:
                        $ref: '#/definitions/ChatterChatSummaryResponseCollection'
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "403":
                    description: Forbidden response.
                    schema:
                        type: string
            schemes:
                - ws
            security:
                - jwt_header_Authorization: []
definitions:
    ChatSummaryResponse:
        title: 'Mediatype identifier: application/vnd.goa.summary; view=default'
        type: object
        properties:
            length:
                type: integer
                description: Length of the message sent
                example: 6069499211671146672
                format: int64
            message:
                type: string
                description: Message sent to the server
                example: Voluptatum quos hic blanditiis praesentium cum repellendus.
            sent_at:
                type: string
                description: Time at which the message was sent
                example: "2011-01-03T01:56:34Z"
                format: date-time
        description: ChatSummaryResponse result type (default view)
        example:
            length: 8335921181773284046
            message: Aut nisi unde dicta et eius modi.
            sent_at: "2004-01-30T16:28:18Z"
        required:
            - message
            - sent_at
    ChatterChatSummaryResponseCollection:
        title: 'Mediatype identifier: application/vnd.goa.summary; type=collection; view=default'
        type: array
        items:
            $ref: '#/definitions/ChatSummaryResponse'
        description: SummaryResponseBody is the result type for an array of ChatSummaryResponse (default view)
        example:
            - length: 1434954528860155933
              message: Rerum ut excepturi quasi sit quas.
              sent_at: "1999-09-28T05:07:04Z"
            - length: 1434954528860155933
              message: Rerum ut excepturi quasi sit quas.
              sent_at: "1999-09-28T05:07:04Z"
            - length: 1434954528860155933
              message: Rerum ut excepturi quasi sit quas.
              sent_at: "1999-09-28T05:07:04Z"
            - length: 1434954528860155933
              message: Rerum ut excepturi quasi sit quas.
              sent_at: "1999-09-28T05:07:04Z"
    ChatterHistoryResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.summary; view=default'
        type: object
        properties:
            length:
                type: integer
                description: Length of the message sent
                example: 5765949798861067830
                format: int64
            message:
                type: string
                description: Message sent to the server
                example: Quia quos eos.
            sent_at:
                type: string
                description: Time at which the message was sent
                example: "1988-06-22T12:43:01Z"
                format: date-time
        description: HistoryResponseBody result type (default view)
        example:
            length: 2026112187252484187
            message: Quis et natus et ratione sit id.
            sent_at: "1991-10-18T00:32:15Z"
        required:
            - message
            - sent_at
    ChatterSubscribeResponseBody:
        title: ChatterSubscribeResponseBody
        type: object
        properties:
            action:
                type: string
                example: added
                enum:
                    - added
            added_at:
                type: string
                description: Time at which the message was added
                example: "2002-10-24T14:44:57Z"
                format: date-time
            details:
                type: object
                properties:
                    Type:
                        type: string
                        description: |-
                            Union type name, one of:
                            - "package_created"
                            - "package_deleted"
                            - "package_updated"
                        example: package_updated
                        enum:
                            - package_created
                            - package_deleted
                            - package_updated
                    Value:
                        type: string
                        description: JSON encoded union value
                        example: '{"id":4134264707864151039,"item":{"description":"Natus rerum eos at et rerum non."}}'
                example:
                    Type: package_created
                    Value: '{"id":4134264707864151039,"item":{"description":"Natus rerum eos at et rerum non."}}'
                required:
                    - Type
                    - Value
            message:
                type: string
                description: Message sent to the server
                example: Perspiciatis aspernatur quisquam aut.
        example:
            action: added
            added_at: "1976-07-27T17:31:27Z"
            details:
                Type: package_deleted
                Value: '{"id":4134264707864151039,"item":{"description":"Natus rerum eos at et rerum non."}}'
            message: Veritatis illo ea non voluptatum molestias.
        required:
            - message
            - action
            - added_at
securityDefinitions:
    basic_header_Authorization:
        type: basic
        description: Secures the login endpoint.
    jwt_header_Authorization:
        type: apiKey
        description: |-
            Secures endpoint by requiring a valid JWT token. Supports scopes "stream:read" and "stream:write".

            **Security Scopes**:
              * `stream:read`: Read-only access
              * `stream:write`: Read and write access
        name: Authorization
        in: header
